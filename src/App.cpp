#include "App.h"

App::App()
{
    window = NULL;
    shouldQuit = false;
    sdlExtCount = 0;
    vkInst = VK_NULL_HANDLE;
    vkSurf = VK_NULL_HANDLE;

#define INSERT_ELEMENT(p) vulkanErrors[p] = #p
    INSERT_ELEMENT(VK_ERROR_OUT_OF_HOST_MEMORY);
    INSERT_ELEMENT(VK_ERROR_OUT_OF_DEVICE_MEMORY);
    INSERT_ELEMENT(VK_ERROR_INITIALIZATION_FAILED);
    INSERT_ELEMENT(VK_ERROR_DEVICE_LOST);
    INSERT_ELEMENT(VK_ERROR_MEMORY_MAP_FAILED);
    INSERT_ELEMENT(VK_ERROR_LAYER_NOT_PRESENT);
    INSERT_ELEMENT(VK_ERROR_EXTENSION_NOT_PRESENT);
    INSERT_ELEMENT(VK_ERROR_FEATURE_NOT_PRESENT);
    INSERT_ELEMENT(VK_ERROR_INCOMPATIBLE_DRIVER);
    INSERT_ELEMENT(VK_ERROR_TOO_MANY_OBJECTS);
    INSERT_ELEMENT(VK_ERROR_FORMAT_NOT_SUPPORTED);
    INSERT_ELEMENT(VK_ERROR_FRAGMENTED_POOL);
    INSERT_ELEMENT(VK_ERROR_UNKNOWN);
    INSERT_ELEMENT(VK_ERROR_OUT_OF_POOL_MEMORY);
    INSERT_ELEMENT(VK_ERROR_INVALID_EXTERNAL_HANDLE);
    INSERT_ELEMENT(VK_ERROR_FRAGMENTATION);
    INSERT_ELEMENT(VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS);
    INSERT_ELEMENT(VK_ERROR_SURFACE_LOST_KHR);
    INSERT_ELEMENT(VK_ERROR_NATIVE_WINDOW_IN_USE_KHR);
    INSERT_ELEMENT(VK_ERROR_OUT_OF_DATE_KHR);
    INSERT_ELEMENT(VK_ERROR_INCOMPATIBLE_DISPLAY_KHR);
    INSERT_ELEMENT(VK_ERROR_VALIDATION_FAILED_EXT);
    INSERT_ELEMENT(VK_ERROR_INVALID_SHADER_NV);
    INSERT_ELEMENT(VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR);
    INSERT_ELEMENT(VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR);
    INSERT_ELEMENT(VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR);
    INSERT_ELEMENT(VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR);
    INSERT_ELEMENT(VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR);
    INSERT_ELEMENT(VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR);
    INSERT_ELEMENT(VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT);
    INSERT_ELEMENT(VK_ERROR_NOT_PERMITTED_KHR);
    INSERT_ELEMENT(VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT);
    INSERT_ELEMENT(VK_ERROR_COMPRESSION_EXHAUSTED_EXT);
    INSERT_ELEMENT(VK_ERROR_INCOMPATIBLE_SHADER_BINARY_EXT);
    INSERT_ELEMENT(VK_ERROR_OUT_OF_POOL_MEMORY_KHR);
    INSERT_ELEMENT(VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR);
    INSERT_ELEMENT(VK_ERROR_FRAGMENTATION_EXT);
    INSERT_ELEMENT(VK_ERROR_NOT_PERMITTED_EXT);
    INSERT_ELEMENT(VK_ERROR_INVALID_DEVICE_ADDRESS_EXT);
    INSERT_ELEMENT(VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR);
    INSERT_ELEMENT(VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT);
#undef INSERT_ELEMENT
}

bool App::Init()
{
    windowHeight = 600;
    windowWidth = 800;
    windowName = "Vulkan Test";
    if (!InitSDL())
    {
        std::cout << SDL_GetError();
        shouldQuit = true;
        return false;
    }
    if (!InitVulkan())
    {
        std::cout << SDL_GetError();
        shouldQuit = true;
        return false;
    }
    return true;
}

App::~App()
{
}